{"version":3,"sources":["containers/Layout/index.js","containers/Layout/layout.js","containers/Table/index.js","containers/Table/table.js","components/Navigation/index.js","components/Navigation/navigation.js","services.js","containers/Card/card.js","containers/Card/index.js","routes.js","index.js"],"names":["Layout","children","className","Table","history","useHistory","data","map","man","id","surname","name","email","onClick","push","key","Navigation","incId","decId","to","length","getCardById","R","Card","state","card","undefined","setState","this","props","match","params","parseInt","prevProps","prevState","avatar_url","birth_date","phone_number","description","links","src","alt","text","idx","link","href","url","renderCard","Component","withRouter","routes","path","component","exact","createBrowserHistory","ReactDOM","render","document","querySelector"],"mappings":"8tpBAEeA,ECAA,SAAC,GAAgB,IAAfC,EAAc,EAAdA,SACb,OACI,yBAAKC,UAAU,aACVD,I,QCHEE,ECID,WAEV,IAAMC,EAAUC,cAEhB,OACI,kBAAC,EAAD,KACI,iCACI,yBAAKH,UAAU,eACX,wBAAIA,UAAU,kBAAd,0DACA,yBAAKA,UAAU,mBAEnB,2BAAOA,UAAU,SACb,+BACI,wBAAIA,UAAU,kBACV,wBAAIA,UAAU,yDAAd,8CACA,wBAAIA,UAAU,sDAAd,sBACA,wBAAIA,UAAU,uDAAd,WAGR,+BAEKI,EAAKC,KAAI,SAACC,GAAS,IACTC,EAA4BD,EAA5BC,GAAIC,EAAwBF,EAAxBE,QAASC,EAAeH,EAAfG,KAAMC,EAASJ,EAATI,MAC1B,OACI,wBAAIV,UAAU,aAAaW,QAAS,kBAAMT,EAAQU,KAAR,gBAAsBL,KAAOM,IAAKN,GACxE,wBAAIP,UAAU,oCAAoCQ,GAClD,wBAAIR,UAAU,iCAAiCS,GAC/C,wBAAIT,UAAU,kCAAkCU,GAChD,wBAAIV,UAAU,sDACV,4BAAQA,UAAU,gBAAgBW,QAAS,kBAAMT,EAAQU,KAAR,gBAAsBN,EAAIC,OAA3E,0E,gDClCzBO,ECGI,SAAC,GAA8B,IAA7BP,EAA4B,EAA5BA,GAAIH,EAAwB,EAAxBA,KAAMW,EAAkB,EAAlBA,MAAOC,EAAW,EAAXA,MAElC,OACI,yBAAKhB,UAAU,cACVO,EAAK,EACN,kBAAC,IAAD,CACIU,GAAE,gBAAWV,EAAK,GAClBP,UAAU,2CACVW,QAASK,GAHb,kEAME,KAEDT,EAAKH,EAAKc,OACX,kBAAC,IAAD,CACID,GAAE,gBAAWV,EAAK,GAClBP,UAAU,mBACVW,QAASI,GAHb,4DAME,O,gBCnBDI,EAAc,SAACZ,GACxB,OAAOa,IAASA,IAAS,KAAMb,GAAKH,ICIlCiB,E,2MAEFC,MAAQ,CACJf,GAAI,KACJgB,UAAMC,G,EA8EVT,MAAQ,WACJ,EAAKU,UAAS,SAACH,GACX,MAAO,CACHf,GAAIe,EAAMf,GAAK,O,EAK3BS,MAAQ,WACJ,EAAKS,UAAS,SAACH,GACX,MAAO,CACHf,GAAIe,EAAMf,GAAK,O,mFArFvB,IAAMgB,EAAOJ,EAAYO,KAAKC,MAAMC,MAAMC,OAAOtB,IACjDmB,KAAKD,SAAS,CACVF,KAAMA,EAAK,GACXhB,GAAIuB,SAASP,EAAK,GAAGhB,GAAI,Q,yCAIdwB,EAAWC,GAC1B,GAAIN,KAAKJ,MAAMf,KAAOyB,EAAUzB,GAAI,CAChC,IAAMgB,EAAOJ,EAAYO,KAAKC,MAAMC,MAAMC,OAAOtB,IACjDmB,KAAKD,SAAS,CACVF,KAAMA,EAAK,GACXhB,GAAIuB,SAASP,EAAK,GAAGhB,GAAI,S,iCAK1BgB,GAAO,IAEPf,EAAkFe,EAAlFf,QAASC,EAAyEc,EAAzEd,KAAMwB,EAAmEV,EAAnEU,WAAYC,EAAuDX,EAAvDW,WAAYC,EAA2CZ,EAA3CY,aAAczB,EAA6Ba,EAA7Bb,MAAO0B,EAAsBb,EAAtBa,YAAaC,EAASd,EAATc,MAEhF,OACI,yBAAKrC,UAAU,QACX,yBAAKA,UAAU,4BACX,yBAAKA,UAAU,YAAYsC,IAAKL,EAAYM,IAAI,WAC/C,uBAAGvC,UAAU,oCAAoCQ,GACjD,uBAAGR,UAAU,iCAAiCS,IAEnD,yBAAKT,UAAU,0BACX,uBAAGA,UAAU,oBAAb,gEACA,wBAAIA,UAAU,cACV,wBAAIA,UAAU,cACV,0BAAMA,UAAU,6CAAhB,6BACA,8BAAOkC,IAEX,wBAAIlC,UAAU,cACV,0BAAMA,UAAU,6CAAhB,mCACA,8BAAOmC,IAEX,wBAAInC,UAAU,cACV,0BAAMA,UAAU,6CAAhB,UACA,8BAAOU,MAInB,yBAAKV,UAAU,iCACX,uBAAGA,UAAU,oBAAb,+EACA,yBAAKA,UAAU,cACVoC,EAAYlB,OAAS,GAClBkB,EAAY/B,KAAI,SAACmC,EAAMC,GACnB,OACA,yBAAK5B,IAAK4B,GACN,8BAAOD,GACNJ,EAAYlB,SAAWuB,EAAM,GAAK,yBAAKzC,UAAU,0BAOtE,wBAAIA,UAAU,2BACTqC,EAAMhC,KAAI,SAACqC,EAAMD,GACd,OACI,wBAAIzC,UAAU,aAAaa,IAAK4B,GAC5B,uBAAGzC,UAAU,YAAY2C,KAAMD,EAAKE,KAAMF,EAAKjC,KAAOiC,EAAKjC,KAAOiC,EAAKE,a,+BA0BzF,IAAD,OAEE1C,EAAWwB,KAAKC,MAAhBzB,QAFF,EAIcwB,KAAKJ,MAAjBf,EAJF,EAIEA,GAAIgB,EAJN,EAIMA,KAEX,OACI,kBAAC,EAAD,KACI,iCACI,yBAAKvB,UAAU,eACX,wBAAIA,UAAU,kBAAd,2GACA,yBAAKA,UAAU,wCACf,4BAAQA,UAAU,kBAAkBW,QAAS,kBAAMT,EAAQU,KAAK,OAAhE,2DAEHW,GAAQG,KAAKmB,WAAWtB,GACzB,kBAAC,EAAD,CACIhB,GAAIuB,SAASvB,EAAI,IACjBH,KAAMA,EACNW,MAAO,kBAAM,EAAKA,SAClBC,MAAO,kBAAM,EAAKA,iB,GArHvB8B,aCRJzB,EDqIA0B,YAAW1B,GE1HX2B,EANX,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOC,KAAK,IAAIC,UAAWjD,EAAOkD,OAAK,IACvC,kBAAC,IAAD,CAAOF,KAAK,YAAYC,UAAW7B,KCArCnB,G,MAAUkD,eAEhBC,IAASC,OACL,kBAAC,IAAD,CAAQpD,QAASA,GACZ8C,GACMO,SAASC,cAAc,Y","file":"static/js/main.9f5a337f.chunk.js","sourcesContent":["import Layout from './layout';\r\n\r\nexport default Layout;","import React from 'react'\r\n\r\nconst Layout = ({children}) => {\r\n    return (   \r\n        <div className=\"container\">                   \r\n            {children}         \r\n        </div>          \r\n    )\r\n}\r\n\r\nexport default Layout;\r\n","import Table from './table';\r\n\r\nexport default Table;","import React from 'react';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Layout from '../Layout';\r\n\r\nimport data from '../../data.json';\r\n\r\nconst Table = () => {\r\n\r\n    const history = useHistory();\r\n\r\n    return (\r\n        <Layout>\r\n            <section>            \r\n                <div className=\"section-row\">\r\n                    <h2 className=\"section__title\">Участники</h2>\r\n                    <div className=\"section__line\"></div>\r\n                </div>\r\n                <table className=\"table\">\r\n                    <thead>\r\n                        <tr className=\"table__heading\">\r\n                            <th className=\"table__cell table__cell--heading table__cell--surname\">Фамилия</th>\r\n                            <th className=\"table__cell table__cell--heading table__cell--name\">Имя</th>\r\n                            <th className=\"table__cell table__cell--heading table__cell--email\">Email</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n\r\n                        {data.map((man) => {\r\n                            const {id, surname, name, email} = man;\r\n                            return (\r\n                                <tr className=\"table__row\" onClick={() => history.push(`/card/${id}`)} key={id}>\r\n                                    <td className=\"table__cell table__cell--surname\">{surname}</td>\r\n                                    <td className=\"table__cell table__cell--name\">{name}</td>\r\n                                    <td className=\"table__cell table__cell--email\">{email}</td>\r\n                                    <td className=\"table__cell table__cell--right table__cell--button\">\r\n                                        <button className=\"table__button\" onClick={() => history.push(`/card/${man.id}`)}>Посмотреть</button>\r\n                                    </td>\r\n                                </tr>  \r\n                            )\r\n                        })} \r\n                    </tbody>\r\n                </table>\r\n            </section>\r\n        </Layout>\r\n    )\r\n}\r\n\r\nexport default Table\r\n","import Navigation from './navigation';\r\nexport default Navigation;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Link} from 'react-router-dom';\r\n\r\nconst Navigation = ({id, data, incId, decId}) => {\r\n\r\n    return (\r\n        <nav className=\"navigation\">\r\n            {id > 1 ?\r\n            <Link\r\n                to={`/card/${id - 1}`}\r\n                className=\"navigation__link navigation__link--right\"\r\n                onClick={decId}>    \r\n                &lt; Предыдущая\r\n            </Link>\r\n            : null    \r\n            }   \r\n            {id < data.length ?\r\n            <Link\r\n                to={`/card/${id + 1}`}\r\n                className=\"navigation__link\"\r\n                onClick={incId}>       \r\n                Следующая &gt;\r\n            </Link>\r\n            : null    \r\n            }            \r\n        </nav>\r\n    )\r\n}\r\n\r\nNavigation.propTypes = {\r\n    id: PropTypes.number,\r\n    data: PropTypes.array,\r\n    incId: PropTypes.func,\r\n    decId: PropTypes.func\r\n}\r\n\r\nexport default Navigation\r\n\r\n","import * as R from 'ramda';\r\n\r\nimport data from './data.json';\r\n\r\n\r\nexport const getCardById = (id) => {\r\n    return R.filter(R.propEq('id', id), data)\r\n}","import React, {Component} from 'react';\r\nimport { withRouter } from 'react-router';\r\n\r\nimport Layout from '../Layout';\r\nimport Navigation from '../../components/Navigation';\r\n\r\nimport data from '../../data.json';\r\n\r\nimport {getCardById} from \"../../services\"\r\n\r\nclass Card extends Component {  \r\n    \r\n    state = {\r\n        id: null,\r\n        card: undefined\r\n    }\r\n\r\n    componentDidMount() { \r\n        const card = getCardById(this.props.match.params.id);\r\n        this.setState({\r\n            card: card[0],\r\n            id: parseInt(card[0].id, 10)\r\n        })\r\n    }  \r\n    \r\n    componentDidUpdate(prevProps, prevState) { \r\n        if (this.state.id !== prevState.id) {\r\n            const card = getCardById(this.props.match.params.id);\r\n            this.setState({\r\n                card: card[0],\r\n                id: parseInt(card[0].id, 10)\r\n            })     \r\n        }\r\n    }  \r\n    \r\n    renderCard(card) {\r\n\r\n        const {surname, name, avatar_url, birth_date, phone_number, email, description, links} = card;\r\n\r\n        return (\r\n            <div className=\"card\">\r\n                <div className=\"card__avatar card__block\">\r\n                    <img className=\"card__img\" src={avatar_url} alt=\"avatar\" />\r\n                     <p className=\"card__title card__title--surname\">{surname}</p>  \r\n                     <p className=\"card__title card__title--name\">{name}</p>  \r\n                </div>\r\n                <div className=\"card__info card__block\">\r\n                    <p className=\"card__subheading\">Информация</p>\r\n                    <ul className=\"card__list\">\r\n                        <li className=\"card__item\">\r\n                            <span className=\"card__subheading card__subheading--margin\">Дата:</span>\r\n                            <span>{birth_date}</span>\r\n                        </li>\r\n                        <li className=\"card__item\">\r\n                            <span className=\"card__subheading card__subheading--margin\">Номер:</span>\r\n                            <span>{phone_number}</span>\r\n                        </li>\r\n                        <li className=\"card__item\">\r\n                            <span className=\"card__subheading card__subheading--margin\">Email:</span>\r\n                            <span>{email}</span>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n                <div className=\"card__description card__block\">\r\n                    <p className=\"card__subheading\">Немного о себе:</p>\r\n                    <div className=\"card__text\">\r\n                        {description.length > 0 && \r\n                            description.map((text, idx) => {\r\n                                return (\r\n                                <div key={idx}>\r\n                                    <span>{text}</span>\r\n                                    {description.length !== idx + 1 && <div className=\"card__separator\"></div>}  \r\n                                </div>\r\n                                )\r\n                            }) \r\n                        }\r\n                    </div>\r\n                </div>\r\n                <ul className=\"card__links card__block\"> \r\n                    {links.map((link, idx) => {\r\n                        return (\r\n                            <li className=\"card__link\" key={idx}>\r\n                                <a className=\"card__url\" href={link.url}>{link.name ? link.name : link.url}</a>\r\n                            </li>\r\n                        )\r\n                    })                       \r\n                    }                          \r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    incId = () => {\r\n        this.setState((state) => {\r\n            return {\r\n                id: state.id + 1\r\n            }\r\n        })\r\n    }   \r\n    \r\n    decId = () => {\r\n        this.setState((state) => {\r\n            return {\r\n                id: state.id - 1\r\n            }\r\n        })\r\n    } \r\n\r\n    render() {\r\n\r\n        const {history} = this.props;\r\n\r\n        const {id, card} = this.state;\r\n       \r\n        return (\r\n            <Layout>\r\n                <section>\r\n                    <div className=\"section-row\">\r\n                        <h2 className=\"section__title\">Карточка участника</h2>\r\n                        <div className=\"section__line section__line--button\"></div>\r\n                        <button className=\"section__button\" onClick={() => history.push(\"/\")}>Вернуться</button>\r\n                    </div>\r\n                    {card && this.renderCard(card)}\r\n                    <Navigation \r\n                        id={parseInt(id, 10)}\r\n                        data={data} \r\n                        incId={() => this.incId()}    \r\n                        decId={() => this.decId()}>\r\n                    </Navigation>    \r\n                </section>\r\n            </Layout>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter(Card)\r\n\r\n","import Card from './card';\r\n\r\nexport default Card;","import React from 'react';\r\nimport {Switch, Route} from 'react-router';\r\n\r\nimport Table from './containers/Table';\r\nimport Card from './containers/Card';\r\n\r\nconst routes = (\r\n    <Switch>\r\n        <Route path='/' component={Table} exact />\r\n        <Route path='/card/:id' component={Card} />\r\n    </Switch>\r\n)\r\n\r\nexport default routes\r\n","import React from 'react';\nimport {Router} from 'react-router';\nimport ReactDOM from 'react-dom';\nimport {createBrowserHistory} from 'history';\n\nimport routes from './routes';\nimport \"./sass/style.scss\";\n\n\nconst history = createBrowserHistory();\n\nReactDOM.render(\n    <Router history={history}>\n        {routes}\n    </Router>, document.querySelector('#root'));\n\n"],"sourceRoot":""}